from telebot import types


def start_markup():
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–ú–æ–∏ —Ç—É—Ä–Ω–∏—Ä—ã', callback_data='user'))
    markup.add(types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É',
                                          url='https://t.me/TournamentManagebot?startgroup=botstart'))

    return markup


def back_markup():
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back'))

    return markup


def my_back_markup():
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='user'))

    return markup


def my_markup(results):
    markup = types.InlineKeyboardMarkup()

    for i, k in enumerate(results, start=1):
        markup.add(types.InlineKeyboardButton(text=f'{i}. {k["title"]}', callback_data=f'my_{i - 1}'))

    return markup


def group_start_markup():
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä ‚úç', callback_data='tourtype'))

    return markup


def tournament_type():
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–°–≤–æ–±–æ–¥–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üü¢', callback_data=f'nw_free'))
    markup.add(types.InlineKeyboardButton(text='–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üîµ', callback_data=f'nw_fix'))

    return markup


def new_tournament(game_id):
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ç—É—Ä–Ω–∏—Ä—É üèÜ',
                                          url=f'https://t.me/tournamentmanagebot?start={game_id}'))

    return markup


def confirm_markup(id):
    markup = types.InlineKeyboardMarkup()

    markup.add(types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ', callback_data=f'cnf_y_{id}'))
    markup.add(types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å ‚ùå', callback_data=f'cnf_n_{id}'))

    return markup
